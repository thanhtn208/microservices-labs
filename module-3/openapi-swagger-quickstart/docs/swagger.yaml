basePath: /
definitions:
  controllers.CreateBookInput:
    properties:
      author:
        type: string
      title:
        type: string
    required:
    - author
    - title
    type: object
  controllers.UpdateBookInput:
    properties:
      author:
        type: string
      title:
        type: string
    type: object
  models.Book:
    properties:
      author:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Gin Swagger Example API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /books:
    get:
      consumes:
      - application/json
      description: get books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: List books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: add by json book
      parameters:
      - description: Create book
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateBookInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Add a book
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: update by book ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete a book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: get book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Show a book
      tags:
      - books
    patch:
      consumes:
      - application/json
      description: update by json book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update book
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateBookInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Update a book
      tags:
      - books
schemes:
- http
swagger: "2.0"
